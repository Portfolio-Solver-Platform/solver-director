"""change problem-group to many-to-many

Revision ID: 176f933b48d6
Revises: dde4e526e30f
Create Date: 2025-10-27 13:29:00.230996

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '176f933b48d6'
down_revision: Union[str, Sequence[str], None] = 'dde4e526e30f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('problem_groups',
    sa.Column('problem_id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['problem_id'], ['problems.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('problem_id', 'group_id')
    )

    # Migrate existing data: copy problem-group associations
    op.execute("""
        INSERT INTO problem_groups (problem_id, group_id)
        SELECT id, group_id FROM problems
        WHERE group_id IS NOT NULL
    """)

    op.drop_constraint(op.f('problems_group_id_fkey'), 'problems', type_='foreignkey')
    op.drop_column('problems', 'group_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('problems', sa.Column('group_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.create_foreign_key(op.f('problems_group_id_fkey'), 'problems', 'groups', ['group_id'], ['id'], ondelete='CASCADE')
    op.drop_table('problem_groups')
    # ### end Alembic commands ###
